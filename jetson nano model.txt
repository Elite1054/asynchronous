jetson nano:

data collection same as raspberry pi 4


training the model:


import pandas as pd
from sklearn.model_selection import train_test_split
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense


data = pd.read_csv('imu_data.csv')
X = data.iloc[:, :-1]
y = data.iloc[:, -1]
 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2)


model = Sequential([
    Dense(64, activation='relu', input_shape=(X_train.shape[1],)),
    Dense(64, activation='relu'),
    Dense(1, activation='sigmoid')
])


model.compile(optimizer='adam', loss='binary_crossentropy', metrics=['accuracy'])


model.fit(X_train, y_train, epochs=10, batch_size=32, validation_split=0.2)


loss, accuracy = model.evaluate(X_test, y_test)
print("Accuracy:", accuracy)

model.save('gait_model.h5')

Deployment:


import tensorflow as tf

model = tf.keras.models.load_model('gait_model.h5')

def predict_gait(imu_data):
    return model.predict([imu_data])


try:
    while True:
        imu_data = get_imu_data()
        prediction = predict_gait(imu_data)
        print("Gait pattern:", prediction)
        time.sleep(0.1)
except KeyboardInterrupt:
    pass
